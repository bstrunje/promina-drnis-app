1. Izmjene u Prisma shemi
Enumeracije
prisma
CopyInsert
enum SenderType {
  member                // ostaje isto - običan član
  member_administrator  // umjesto "admin" - član s admin ovlastima
  member_superuser      // umjesto "superuser" - član s najvišim ovlastima
}

model Member {
  status                   String?                 @default("pending") @db.VarChar(50)
  date_of_birth            DateTime?               @db.Date
  oib                      String                  @unique @db.VarChar(11)
  cell_phone               String                  @db.VarChar(20)
  city                     String                  @db.VarChar(100)
  street_address           String                  @db.VarChar(200)
  email                    String?                 @db.VarChar(255)
  first_name               String                  @db.VarChar(100)
  last_name                String                  @db.VarChar(100)
  member_id                Int                     @id @default(autoincrement())
  password_hash            String?                 @db.VarChar(255)
  role                     String                  @default("member") @db.VarChar(20)
  last_login               DateTime?               @db.Timestamp(6)
  full_name                String                  @db.VarChar(100)
  life_status              String?                 @db.VarChar(25)
  tshirt_size              String?                 @db.VarChar(4)
  shell_jacket_size        String?                 @db.VarChar(4)
  total_hours              Decimal?                @default(0) @db.Decimal(10, 2)
  gender                   String?                 @db.VarChar(6)
  registration_completed   Boolean?                @default(false)
  profile_image_path       String?                 @db.VarChar(255)
  profile_image_updated_at DateTime?               @db.Timestamp(6)
  membership_type          String?                 @default("regular") @db.VarChar(20)
  created_at               DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?               @default(now()) @db.Timestamptz(6)
  nickname                 String?                 @db.VarChar(50)
  failed_login_attempts    Int                     @default(0)
  locked_until             DateTime?               @db.Timestamp(6)
  last_failed_login        DateTime?               @db.Timestamp(6)
  grantedPermissions       MemberPermissions[]      @relation("grantedByMemberPermissions") //umjesto AdminPermissions[] i promjena relacije
  permissions              MemberPermissions?       @relation("memberPermissionsRelation") //umjesto AdminPermissions[] i promjena relacije
  annual_statistics        AnnualStatistics[]
  affected_audits          AuditLog[]              @relation("AuditAffected")
  performed_audits         AuditLog[]              @relation("AuditPerformer")
  card_numbers             CardNumber[]
  messages                 MemberMessage[]
  membership_details       MembershipDetails?
  periods                  MembershipPeriod[]
  password_update_queue    password_update_queue[]
  refresh_tokens           refresh_tokens[]
  stamp_history            stamp_history[]

  @@index([full_name], map: "idx_members_full_name")
  @@index([oib], map: "idx_members_oib")
  @@index([total_hours], map: "idx_members_total_hours")
  @@map("members")
}

model MemberMessage {
  message_id     Int        @id @default(autoincrement())
  member_id      Int?
  message_text   String
  created_at     DateTime?  @default(now()) @db.Timestamp(6)
  read_at        DateTime?  @db.Timestamp(6)
  status         String?    @default("unread") @db.VarChar(20)
  sender_id      Int?
  recipient_id   Int?
  recipient_type String?    @default("member_administrator") @db.VarChar(10) // umjesto admin
  sender_type    SenderType @default(member)
  member         Member?    @relation(fields: [member_id], references: [member_id], onDelete: Cascade, onUpdate: NoAction)

  @@map("member_messages")
}

model MemberAdministrator { // umjesto SystemAdmin
  id            Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(100)
  email         String    @unique @db.VarChar(255)
  display_name  String    @db.VarChar(100)
  password_hash String    @db.VarChar(255)
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  last_login    DateTime? @db.Timestamp(6)

  @@map("member_administrator") // umjesto system_admins
}

model MemberPermissions { // umjesto AdminPermissions
  permission_id          Int       @id @default(autoincrement())
  member_id              Int?      @unique
  can_manage_end_reasons Boolean?  @default(false)
  granted_by             Int?
  granted_at             DateTime? @default(now()) @db.Timestamp(6)
  grantedByMember        Member?   @relation("grantedByPermissions", fields: [granted_by], references: [member_id], onDelete: NoAction, onUpdate: NoAction)
  member                 Member?   @relation("memberPermissions", fields: [member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([granted_by], map: "idx_member_permissions_granted_by") // umjesto admin
  @@index([member_id], map: "idx_member_permissions_member") // umjesto admin
  @@map("member_permissions") // umjesto admin_permissions
}

SAMO OVO:
model system_admin {
  id            Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(50)
  email         String    @unique @db.VarChar(100)
  display_name  String    @db.VarChar(100)
  password_hash String    @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  last_login    DateTime? @db.Timestamp(6)
}
JE SYSTEM ADMIN, odnosno poseban entitet kkoji ne spada u članstvo.