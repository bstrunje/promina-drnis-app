==> Cloning from https://github.com/bstrunje/promina-drnis-app
==> Checking out commit 9c3f4937a22d4b03806877032b0f431649d9fea7 in branch main
==> Requesting Node.js version 20.x
==> Using Node.js version 20.18.3 via /opt/render/project/src/backend/package.json
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Using Bun version 1.1.0 (default)
==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install && npm run build'...
added 335 packages, and audited 337 packages in 7s
41 packages are looking for funding
  run `npm fund` for details
found 0 vulnerabilities
> @promina-drnis-app/backend@1.0.0 build
> tsc
==> Uploading build...
==> Build uploaded in 8s
==> Build successful ðŸŽ‰
==> Deploying...
==> Requesting Node.js version 20.x
==> Using Node.js version 20.18.3 via /opt/render/project/src/backend/package.json
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Running 'npm start'
> @promina-drnis-app/backend@1.0.0 start
> node dist/server.js
file:///opt/render/project/src/backend/dist/app.js:78
    app.use(express.static(path.join(__dirname, '../../frontend/dist')));
                                     ^
ReferenceError: __dirname is not defined in ES module scope
This file is being treated as an ES module because it has a '.js' file extension and '/opt/render/project/src/backend/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
    at file:///opt/render/project/src/backend/dist/app.js:78:38
    at ModuleJob.run (node:internal/modules/esm/module_job:234:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:473:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:122:5)
Node.js v20.18.3
npm error Lifecycle script `start` failed with error:
npm error code 1
npm error path /opt/render/project/src/backend
npm error workspace @promina-drnis-app/backend@1.0.0
npm error location /opt/render/project/src/backend
npm error command failed
npm error command sh -c node dist/server.js
==> Requesting Node.js version 20.x
==> Exited with status 1
==> Using Node.js version 20.18.3 via /opt/render/project/src/backend/package.json
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys
==> Running 'npm start'
> @promina-drnis-app/backend@1.0.0 start
> node dist/server.js
file:///opt/render/project/src/backend/dist/app.js:78
    app.use(express.static(path.join(__dirname, '../../frontend/dist')));
                                     ^
ReferenceError: __dirname is not defined in ES module scope
This file is being treated as an ES module because it has a '.js' file extension and '/opt/render/project/src/backend/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
    at file:///opt/render/project/src/backend/dist/app.js:78:38
    at ModuleJob.run (node:internal/modules/esm/module_job:234:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:473:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:122:5)
Node.js v20.18.3
npm error Lifecycle script `start` failed with error:
npm error code 1
npm error path /opt/render/project/src/backend
npm error workspace @promina-drnis-app/backend@1.0.0
npm error location /opt/render/project/src/backend
npm error command failed
npm error command sh -c node dist/server.js