return (
  <Card className="my-6">
    <CardHeader>
      {/* Keep the existing CardHeader content */}
    </CardHeader>
    <CardContent>
      {/* New accordion-style UI */}
      <div className="space-y-6">
        {/* Initial view showing all action buttons */}
        {!activeSection && (
          <div className="grid grid-cols-1 gap-4">
            <Button 
              onClick={() => setActiveSection("single")} 
              className="h-auto py-6 flex flex-col items-center justify-center"
              variant="outline"
            >
              <span className="text-lg font-medium">Add Single Number</span>
              <span className="text-xs text-gray-500 mt-1">Add an individual card number to the system</span>
            </Button>
            
            <Button 
              onClick={() => setActiveSection("range")} 
              className="h-auto py-6 flex flex-col items-center justify-center"
              variant="outline"
            >
              <span className="text-lg font-medium">Add Number Range</span>
              <span className="text-xs text-gray-500 mt-1">Add a sequential range of card numbers</span>
            </Button>
            
            <Button 
              onClick={() => setActiveSection("manage")} 
              className="h-auto py-6 flex flex-col items-center justify-center"
              variant="outline"
            >
              <span className="text-lg font-medium">Manage Numbers</span>
              <span className="text-xs text-gray-500 mt-1">View, search and delete existing card numbers</span>
            </Button>
          </div>
        )}
        
        {/* Single Number Form */}
        {activeSection === "single" && (
          <div className="space-y-4">
            <div className="flex items-center mb-4">
              <Button 
                variant="ghost" 
                onClick={() => setActiveSection(null)} 
                className="mr-2"
                size="sm"
              >
                ← Back
              </Button>
              <h3 className="text-lg font-semibold">Add Single Card Number</h3>
            </div>
            
            <div className="bg-white p-6 rounded-lg border">
              <form onSubmit={handleAddSingle} className="space-y-4">
                <Input
                  id="singleCardNumber"
                  placeholder="Enter new card number (e.g., 00123)"
                  value={singleCardNumber}
                  onChange={(e) => setSingleCardNumber(e.target.value)}
                  disabled={isLoadingSingle}
                  autoFocus
                />
                <div className="flex space-x-3 pt-2">
                  <Button 
                    type="submit" 
                    disabled={isLoadingSingle || !singleCardNumber}
                  >
                    {isLoadingSingle ? "Adding..." : "Add Card Number"}
                  </Button>
                  <Button 
                    type="button" 
                    variant="outline" 
                    onClick={() => setActiveSection(null)}
                  >
                    Cancel
                  </Button>
                </div>
              </form>
            </div>
          </div>
        )}
        
        {/* Range Form */}
        {activeSection === "range" && (
          <div className="space-y-4">
            <div className="flex items-center mb-4">
              <Button 
                variant="ghost" 
                onClick={() => setActiveSection(null)} 
                className="mr-2"
                size="sm"
              >
                ← Back
              </Button>
              <h3 className="text-lg font-semibold">Add Card Number Range</h3>
            </div>
            
            <div className="bg-white p-6 rounded-lg border">
              <form onSubmit={handleAddRange} className="space-y-4">
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                  <div>
                    <label htmlFor="rangeStart" className="text-sm text-gray-500 mb-1 block">
                      Start Number
                    </label>
                    <Input
                      id="rangeStart"
                      placeholder="e.g., 100"
                      type="number"
                      value={rangeStart !== null ? rangeStart : ''}
                      onChange={(e) => setRangeStart(e.target.value ? parseInt(e.target.value) : null)}
                      disabled={isLoadingRange}
                      autoFocus
                    />
                  </div>
                  <div>
                    <label htmlFor="rangeEnd" className="text-sm text-gray-500 mb-1 block">
                      End Number
                    </label>
                    <Input
                      id="rangeEnd"
                      placeholder="e.g., 200"
                      type="number"
                      value={rangeEnd !== null ? rangeEnd : ''}
                      onChange={(e) => setRangeEnd(e.target.value ? parseInt(e.target.value) : null)}
                      disabled={isLoadingRange}
                    />
                  </div>
                </div>
                <div className="flex space-x-3 pt-2">
                  <Button 
                    type="submit" 
                    disabled={isLoadingRange || rangeStart === null || rangeEnd === null}
                  >
                    {isLoadingRange ? "Adding..." : "Add Card Number Range"}
                  </Button>
                  <Button 
                    type="button" 
                    variant="outline" 
                    onClick={() => setActiveSection(null)}
                  >
                    Cancel
                  </Button>
                </div>
                <p className="text-xs text-gray-500 mt-2">
                  Numbers will be padded with leading zeros based on your system settings.
                </p>
              </form>
            </div>
          </div>
        )}

        {/* Manage Numbers Section */}
        {activeSection === "manage" && (
          <div>
            <div className="flex items-center mb-4">
              <Button 
                variant="ghost" 
                onClick={() => setActiveSection(null)} 
                className="mr-2"
                size="sm"
              >
                ← Back
              </Button>
              <h3 className="text-lg font-semibold">Manage Card Numbers</h3>
            </div>
            
            {/* Keep the rest of your existing "manage" tab content here */}
            <div>
              {/* Filter and view options */}
              <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mb-4 items-start">
                {/* ...existing code... */}
              </div>
              
              {/* Status filters */}
              <div className="mb-4 flex flex-wrap gap-2">
                {/* ...existing code... */}
              </div>
              
              {/* Card number list */}
              {/* ...existing code... */}
            </div>
          </div>
        )}
      </div>
    </CardContent>
  </Card>
);